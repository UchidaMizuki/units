// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// udunits_init
LogicalVector udunits_init(CharacterVector path, bool warn_on_failure);
RcppExport SEXP _units_udunits_init(SEXP pathSEXP, SEXP warn_on_failureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type path(pathSEXP);
    Rcpp::traits::input_parameter< bool >::type warn_on_failure(warn_on_failureSEXP);
    rcpp_result_gen = Rcpp::wrap(udunits_init(path, warn_on_failure));
    return rcpp_result_gen;
END_RCPP
}
// R_ut_parse
XPtr< std::vector<void *> > R_ut_parse(CharacterVector name);
RcppExport SEXP _units_R_ut_parse(SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(R_ut_parse(name));
    return rcpp_result_gen;
END_RCPP
}
// R_ut_format
CharacterVector R_ut_format(SEXP p, bool names, bool definition);
RcppExport SEXP _units_R_ut_format(SEXP pSEXP, SEXP namesSEXP, SEXP definitionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type p(pSEXP);
    Rcpp::traits::input_parameter< bool >::type names(namesSEXP);
    Rcpp::traits::input_parameter< bool >::type definition(definitionSEXP);
    rcpp_result_gen = Rcpp::wrap(R_ut_format(p, names, definition));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_units_udunits_init", (DL_FUNC) &_units_udunits_init, 2},
    {"_units_R_ut_parse", (DL_FUNC) &_units_R_ut_parse, 1},
    {"_units_R_ut_format", (DL_FUNC) &_units_R_ut_format, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_units(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
